===============================
Using the 2-matrix_divided module
================================

this module defines the matrix_divided(matrix, div) function that divides the numbers in a matrix by div


=======
Usage
======

The  matrix_divided takes a matrix and divides each element in the matrix by div.


=================
Import the function
=================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix1 = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]

>>> matrix_divided(matrix1, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix2 = [
		... [1.1, 1.2, 1.3],
		... [2.1, 2.2, 2.3],
		... [3.1, 3.2, 3.3]
		... ]

>>> matrix_divided(matrix2, 2.5)
	[[0.44, 0.48, 0.52], [0.84, 0.88, 0.92], [1.24, 1.28, 1.32]]


>>> matrix_divided(matrix2, 2)
	[[0.55, 0.6, 0.65], [1.05, 1.1, 1.15], [1.55, 1.6, 1.65]]

	>>> matrix_divided(matrix2, float('nan'))
	[[nan, nan, nan], [nan, nan, nan], [nan, nan, nan]]


	>>> matrix_divided(matrix2, float('inf'))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]


>>> matrix_divided(matrix2, 0)
	Traceback (most recent call last):
		ZeroDivisionError: division by zero

		>>> matrix_divided(matrix2, "mat")
		Traceback (most recent call last):
			TypeError: div must be a number

			>>> matrix_divided(matrix2, mat)
	Traceback (most recent call last):
		NameError: name 'mat' is not defined

		>>> matrix_divided("matrix2", 6)
		Traceback (most recent call last):
			TypeError: matrix must be a matrix (list of lists) of integers/floats

			>>> matrix_divided([[3, "9"], [15, 3]], 3)
			Traceback (most recent call last):
				TypeError: matrix must be a matrix (list of lists) of integers/floats

				>>> matrix3 = [
					... [1.1, 1.2],
					... [2.1]
					... ]

>>> matrix_divided([[8, 9], [7]], 8)
	Traceback (most recent call last):
		TypeError: Each row of the matrix must have the same size

